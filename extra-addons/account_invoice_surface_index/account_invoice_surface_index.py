# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the OpenERP plugin for Dia !
from osv import fields,osv

class account_invoice(osv.osv):
    """Facturation avec notion d'index de lecture de compteur."""
    _inherit = 'account.invoice'
    _columns = {
        'index_start': fields.float('Index Debut'),
        'index_end': fields.float('Index fin'),
        'index_start_elec': fields.float('Index Electricite Debut'),
        'index_end_elec': fields.float('Index Electricite fin'),
        'room_area': fields.float('Surface Appartement', help='Surface attribue au client'),
        'global_bill_water': fields.float('Facture Globale Eau', help='Montant de la facture a repartir'),
        'global_bill_elec': fields.float('Facture Globale Electricite', help='Montant de la facture a repartir'),
        'global_bill_elec_qty':fields.float('Qte Globale Electricite', help='Montant de la consommation a repartir'),
        'building_area': fields.float('Surface Batiment'),
        'consommation':fields.float('Consommation Eau Calcule'),
        'total_building_area': fields.float('Surface Enceinte'),
        
    }
    def index_change(self, cr, uid, ids,context=None):
        invoice_line_obj=self.pool.get('account.invoice.line')
        invoice_obj=self.pool.get('account.invoice')
        for invoice in self.browse(cr,uid,ids):
            for line in invoice.invoice_line:
                if line.product_id.name=='Consommation':
                    if line.type=='ele':
                        quantity=invoice.index_end_elec-invoice.index_start_elec
                        pu=invoice.global_bill_elec/invoice.global_bill_elec_qty
                        val={'quantity':quantity,'price_unit':pu}
                    else:
                        quantity=invoice.index_end-invoice.index_start
                        val={'quantity':quantity}
                    inv_qty=quantity
                else:
                    if line.type=='eau':
                        quantity=invoice.index_end-invoice.index_start
                        if line.product_id.name=='Redevance':
                            quantity=1
                            pu=invoice.global_bill_water/invoice.building_area*invoice.room_area
                            val={'quantity':quantity,'price_unit':pu}
                        else:
                            val={'quantity':quantity}
                    else:
                        quantity=invoice.index_end_elec-invoice.index_start_elec
                        if line.base:
                            pu=line.base/invoice.total_building_area*invoice.room_area
                            quantity=1
                            val={'quantity':quantity,'price_unit':pu}
                invoice_line_obj.write(cr,uid,line.id,val)
            invoice_obj.write(cr,uid,invoice.id,{'consommation':inv_qty})
            invoice.button_reset_taxes()
        return True
account_invoice()

class account_invoice_line(osv.osv):
    """Facturation avec notion d'index de lecture de compteur."""
    _inherit = 'account.invoice.line'
    _columns = {
        'type':fields.selection((('eau','Eau'),('ele','Electricite')),'Type'),
        'base':fields.float('Base de calcul'),
    }

account_invoice_line()
